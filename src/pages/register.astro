---
import FormLayout from "@/layouts/FormLayout.astro";
import FormContainer from "@/components/FormContainer.astro";

interface Props {
  title: string;
}

const { title = "Timely | Registrar usuario" } = Astro.props;
---

<FormLayout {title}>
  <FormContainer title={title}>
    <form id="register-form" class="mt-6 space-y-6">
      <input
        type="text"
        name="name"
        placeholder="Nombre completo"
        class="w-full h-12 bg-gray-100 rounded-xl shadow-md placeholder-gray-500 focus:bg-blue-100 focus:outline-none px-4"
      />

      <input
        type="text"
        name="email"
        placeholder="Correo electrónico"
        class="w-full h-12 bg-gray-100 rounded-xl shadow-md placeholder-gray-500 focus:bg-blue-100 focus:outline-none px-4"
      />

      <input
        type="password"
        name="password"
        placeholder="Contraseña"
        class="w-full h-12 bg-gray-100 rounded-xl shadow-md placeholder-gray-500 focus:bg-blue-100 focus:outline-none px-4"
      />

      <div class="flex items-center text-gray-600 space-x-4">
        <hr class="flex-1 border-gray-300" />
        <span class="text-sm">Confirmar contraseña</span>
        <hr class="flex-1 border-gray-300" />
      </div>

      <input
        type="password"
        name="confirmPassword"
        placeholder="Confirmar contraseña"
        class="w-full h-12 bg-gray-100 rounded-xl shadow-md placeholder-gray-500 focus:bg-blue-100 focus:outline-none px-4"
      />

      <button
        type="submit"
        id="btn-submit"
        class="w-full bg-blue-500 text-white py-3 rounded-xl shadow-md hover:shadow-lg focus:outline-none transition-transform transform hover:scale-105"
      >
        Registrarse
      </button>

      <div class="text-center text-sm text-gray-600">
        <span>¿Ya tienes una cuenta?</span>
        <a href="/login" class="text-blue-500 hover:underline ml-1"
          >Inicia sesión</a
        >
      </div>
    </form>
  </FormContainer>
</FormLayout>

<script>
  import { actions } from "astro:actions";
  import Swal from "sweetalert2";

  document.addEventListener("astro:page-load", () => {
    const $form = document.querySelector("#register-form") as HTMLFormElement;
    const $btnSubmit = document.querySelector(
      "#btn-submit"
    ) as HTMLButtonElement;

    $form.addEventListener("submit", async (event) => {
      event.preventDefault();
      $btnSubmit.disabled = true;

      const formData = new FormData($form);

      const { error } = await actions.registerUser(formData);

      const {email, password, name, confirmPassword} = Object.fromEntries(formData);
      
      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&#])[A-Za-z\d@$!%*?&#]{8,}$/;
      const emaliRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;

      const isValidEmail =  (email as String).match(emaliRegex);
      const isValidPassword = (password as String).match(passwordRegex);
      const isValidName = (name as String).length > 3;
      const isValidConfirmPassword = (confirmPassword as String) == (password as String);

      if (!isValidEmail) {
        showError(new Error("El correo electrónico no es válido"));
        $btnSubmit.disabled = false;
        return;
      }

      if (!isValidPassword) {
        showError(new Error("La contraseña debe tener al menos 8 caracteres, una letra mayúscula, una letra minúscula y un número"));
        $btnSubmit.disabled = false;
        return;
      }

      if (!isValidName) {
        showError(new Error("El nombre no es válido"));
        $btnSubmit.disabled = false;
        return;
      }

      if (!isValidConfirmPassword) {
        showError(new Error("Contraseñas no coinciden"));
        $btnSubmit.disabled = false;
        return;
      }


      if (error) {
        showError(error);
        $btnSubmit.disabled = false;
        if (error.message !== "Contraseñas no coinciden") $form.reset();

        return;
      }

      $btnSubmit.innerText = "Redireccionando...";

      window.location.replace("/");
    });
  });

  const showError = (error: Error) => {
    Swal.fire({
      icon: "error",
      title: "Error",
      text: error.message,
    });
  };
</script>
